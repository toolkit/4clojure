(defproject puzzles "0.1.0-SNAPSHOT"
  :plugins [[lein-sub "0.3.0"]]
  :dependencies [[org.clojure/clojure "1.6.0"]]
  :sub [ "a_half_truth"
         "a_nil_key"
         "advanced_destructuring"
         "anagram_finder"
         "analyze_a_tic_tac_toe_board"
         ;; "analyze_reversi"
         "balancing_brackets"
         "beauty_is_symmetry"
         "best_hand"
         "black_box_testing"
         "cartesian_product"
         "comparisons"
         "compress_a_sequence"
         "contain_yourself"
         "count_a_sequence"
         "count_occurences"
         "crossword_puzzle"
         "decurry"
         "digits_and_bases"
         "dot_product"
         "double_down"
         "drop_every_nth_item"
         "duplicate_a_sequence"
         "equivalence_classes"
         "eulers_totient"
         "factorial_fun"
         "fibonacci_sequence"
         "filter_perfect_squares"
         "find_distinct_items"
         "find_odd_numbers"
         "flatten_a_sequence"
         "flipping_out"
         "for_the_win"
         "function_composition"
         "generating_k_combinations"
         "get_the_caps"
         "global_take_while"
         "graph_connectivity"
         "greatest_common_divisor"
         "group_a_sequence"
         "gus_quinundrum"
         "happy_numbers"
         "hello_world"
         "identify_keys_and_values"
         "implement_range"
         "indexing_sequences"
         "infinite_matrix"
         "infix_calculator"
         "insert_between_two_items"
         "interleave_two_sequences"
         "interpose_a_sequence"
         "intervals"
         "into_camel_case"
         "intro_to_destructuring"
         "intro_to_destructuring2"
         "intro_to_functions"
         "intro_to_iterate"
         "intro_to_lists"
         "intro_to_maps"
         "intro_to_reduce"
         "intro_to_sequences"
         "intro_to_sets"
         "intro_to_some"
         "intro_to_strings"
         "intro_to_trampoline"
         "intro_to_vectors"
         "juxtaposition"
         "last_element"
         "latin_square_slicing"
         "lazy_searching"
         "least_common_multiple"
         "let_it_be"
         "levenshtein_distance"
         "lists_conj"
         "local_bindings"
         "logical_falsity_and_truth"
         "longest_increasing_sub_seq"
         "making_data_dance"
         "map_construction"
         "map_defaults"
         "maps_conj"
         "maximum_value"
         "merge_with_a_function"
         "nothing_but_the_truth"
         "nth_element"
         "number_maze"
         "oscilrate"
         "pack_a_sequence"
         "pairwise_disjoint_sets"
         "palindromic_detector"
         "palindromic_numbers"
         "partially_flatten_a_sequence"
         "partition_a_sequence"
         "pascals_trapezoid"
         "pascals_triangle"
         "penultimate_element"
         "perfect_numbers"
         "power_set"
         "prime_numbers"
         "prime_sandwich"
         "product_digits"
         "re_implement_iterate"
         "re_implement_map"
         "re_implement_trampoline"
         "read_a_binary_number"
         "read_roman_numerals"
         "rearranging_code_1"
         "rearranging_code_2"
         "recognize_playing_cards"
         "recurring_theme"
         "regular_expressions"
         "replicate_a_sequence"
         "reverse_a_sequence"
         "reverse_interleave"
         "rotate_sequence"
         "sequence_of_pronunciations"
         "sequence_reductions"
         "sequences_filter"
         "sequences_map"
         "sequences_rest"
         "sequs_horribilis"
         "set_intersection"
         "sets_conj"
         "simple_closures"
         "simple_math"
         "simple_recursion"
         "split_a_sequence"
         "split_by_type"
         "squares_squared"
         "subset_and_superset"
         "sum_it_all_up"
         "sum_of_square_of_digits"
         "sum_some_set_subsets"
         "symmetric_difference"
         "the_balance_of_n"
         "the_big_divide"
         "through_the_looking_glass"
         "to_tree_or_not_to_tree"
         "transitive_closure"
         "trees_into_tables"
         "triangle_minimal_path"
         "tricky_card_games"
         "universal_computation_engine"
         "vectors_conj"
         "win_at_tic_tac_toe"
         "word_chains"
         "word_sorting"
         "write_roman_numerals" ])
